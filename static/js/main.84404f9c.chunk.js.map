{"version":3,"sources":["components/contents/dataSantri/index.jsx","components/header/index.jsx","components/action/index.jsx","components/navbar/index.jsx","components/contents/page404/index.jsx","components/contents/index.jsx","components/pagination/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["idDeleteSantri","Header","className","ActionButton","props","Button","color","colorButton","outline","outlineButton","onClick","onClickButton","titleButton","ActionInput","Input","type","typeInput","name","nameInput","id","idInput","placeholder","placeholderInput","value","valueInput","onChange","e","onChangeInput","ActionModal","onToggleModal","setState","isModalVisible","state","renderModalHeader","ModalHeader","titleHeader","renderModalBody","ModalBody","classNameBody","Form","inputDataModal","map","item","index","renderFormGroup","FormGroup","key","Label","for","label","nameLabel","renderModalFooter","ModalFooter","inputActionButtonModal","Modal","isOpen","this","toggle","Component","ActionSearch","Collapse","navbar","Nav","NavItem","onSearchSantri","MenuBar","postDataSantri","onHandleInput","studyProgram","onHandlePost","Navbar","light","expand","actionModal","ref","Thead","scope","style","width","Tbody","modalVisible","EditModal","DeleteModal","onClickBtn","onHandleUpdate","onHandleDelete","renderDataSantri","onDataUpdate","inputActionButton","itemBtn","newDataSantri","dataSantri","propTypes","PropTypes","object","bool","func","DataSantri","Table","striped","PageNotFound","Contents","PaginationButton","renderActionButton","active","PaginationItem","disabled","PaginationLink","titleBtn","renderPaginationButton","paginationNumbers","paginationNumberBtn","currentPage","onMovePage","isDisabledPrevious","isDisabledNext","length","previousBtn","onPreviousPage","nextBtn","onNextPage","href","Pagination","aria-label","App","onGetDataSantri","axios","get","then","result","data","setPagination","event","NewPostDataSantri","target","timeid","Date","getTime","isUpdate","post","put","delete","searchDataSantri","filter","toLowerCase","indexOf","dataSantriPerPage","lastIndexOfSantri","firstIndexOfSantri","dataSantriWithLimit","slice","currentDataSantriLength","i","Math","ceil","push","Number","prevState","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84404f9c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Table\n} from 'reactstrap'\nimport { ActionButton, ActionModal } from '../../action'\n\nlet idDeleteSantri\n\nconst DataSantri = (props) => {\n  return (\n    <Table striped className='text-light'>\n      <Thead />\n\n      <Tbody {...props} />\n    </Table>\n  )\n}\n\nconst Thead = () => {\n  return (\n    <thead>\n      <tr>\n        <th\n          scope='col'\n          style={{ width: '20%' }}\n        >\n          ID\n        </th>\n        <th\n          scope='col'\n          style={{ width: '30%' }}\n        >\n          Nama\n        </th>\n        <th\n          scope='col'\n          style={{ width: '25%' }}\n        >\n          Jurusan\n        </th>\n        <th\n          scope='col'\n          style={{ width: '25%' }}\n          className='text-center'\n        >\n          Action\n        </th>\n      </tr>\n    </thead>\n  )\n}\n\nclass Tbody extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      modalVisible: ''\n    }\n  }\n\n  render () {\n    const EditModal = this.state.modalVisible === 'ubah'\n    const DeleteModal = this.state.modalVisible === 'delete'\n\n    const inputActionButton = (item) => (\n      [\n        {\n          titleButton: 'Hapus',\n          colorButton: 'danger',\n          className: 'mr-2',\n          onClickButton: () => {\n            this.setState({\n              modalVisible: 'delete'\n            })\n            idDeleteSantri = item.id\n            this.actionModal.onToggleModal()\n          }\n        },\n        {\n          titleButton: 'Ubah',\n          colorButton: 'warning',\n          className: '',\n          onClickButton: () => {\n            this.setState({\n              modalVisible: 'ubah'\n            })\n            this.props.onDataUpdate(item)\n            this.actionModal.onToggleModal()\n          }\n        }\n      ]\n    )\n\n    const inputDataModal = [\n      {\n        label: 'name',\n        nameLabel: 'Nama Santri',\n        typeInput: 'text',\n        nameInput: 'name',\n        idInput: 'name',\n        placeholderInput: 'nama santri',\n        valueInput: this.props.postDataSantri.name,\n        onChangeInput: this.props.onHandleInput\n      },\n      {\n        label: 'studyProgram',\n        nameLabel: 'Jurusan Santri',\n        typeInput: 'text',\n        nameInput: 'studyProgram',\n        idInput: 'studyProgram',\n        placeholderInput: 'jurusan santri',\n        valueInput: this.props.postDataSantri.studyProgram,\n        onChangeInput: this.props.onHandleInput\n      }\n    ]\n\n    const titleHeader = EditModal\n      ? 'Update Data Santri'\n      : DeleteModal\n        ? 'Apakah anda yakin ingin menghapus data ini?'\n        : ''\n\n    const titleBtn = EditModal\n      ? 'Ubah'\n      : DeleteModal\n        ? 'Hapus'\n        : ''\n\n    const colorBtnLeft = EditModal\n      ? 'info'\n      : DeleteModal\n        ? 'secondary'\n        : ''\n\n    const colorBtnRight = EditModal\n      ? 'secondary'\n      : DeleteModal\n        ? 'info'\n        : ''\n\n    const onClickBtn = EditModal\n      ? () => {\n        this.props.onHandleUpdate()\n      }\n      : DeleteModal\n        ? () => {\n          this.props.onHandleDelete(idDeleteSantri)\n        }\n        : () => { }\n\n    const inputActionButtonModal = [\n      {\n        titleButton: titleBtn,\n        colorButton: colorBtnLeft,\n        className: 'px-5',\n        outlineButton: DeleteModal,\n        onClickButton: onClickBtn\n      },\n      {\n        titleButton: 'Batal',\n        colorButton: colorBtnRight,\n        className: 'px-5',\n        outlineButton: EditModal,\n        onClickButton: onClickBtn\n      }\n    ]\n\n    const className = DeleteModal ? 'justify-content-center border-0' : ''\n\n    const classNameBody = DeleteModal ? 'd-none' : ''\n\n    return (\n      <tbody>\n        {\n          renderDataSantri(this.props).map((item, id) => (\n            <tr key={id}>\n              <th scope='row'>{item.id}</th>\n              <td>{item.name}</td>\n              <td>{item.studyProgram}</td>\n              <td>\n                <div className='row justify-content-center'>\n                  {inputActionButton(item).map((itemBtn, index) => {\n                    return (\n                      <ActionButton\n                        key={index}\n                        titleButton={itemBtn.titleButton}\n                        colorButton={itemBtn.colorButton}\n                        className={itemBtn.className}\n                        onClickButton={() => itemBtn.onClickButton()}\n                      />\n                    )\n                  })}\n                </div>\n              </td>\n            </tr>\n          ))\n        }\n\n        <ActionModal\n          ref={ref => { this.actionModal = ref }}\n          inputDataModal={inputDataModal}\n          inputActionButtonModal={inputActionButtonModal}\n          titleHeader={titleHeader}\n          className={className}\n          classNameBody={classNameBody}\n          postDataSantri={this.props.postDataSantri}\n          onHandleInput={this.props.onHandleInput}\n          onHandleUpdate={this.props.onHandleUpdate}\n          onHandleDelete={this.props.onHandleDelete}\n        />\n      </tbody>\n    )\n  }\n}\n\nconst renderDataSantri = (props) => {\n  return props.value\n    ? props.newDataSantri\n    : props.dataSantri\n}\n\nTbody.propTypes = {\n  postDataSantri: PropTypes.object,\n  onDataUpdate: PropTypes.func,\n  onHandleInput: PropTypes.func,\n  onHandleUpdate: PropTypes.func,\n  onHandleDelete: PropTypes.func\n}\n\nActionModal.propTypes = {\n  postDataSantri: PropTypes.object,\n  isModalVisible: PropTypes.bool,\n  onToggleModal: PropTypes.func,\n  onHandleInput: PropTypes.func,\n  onHandleUpdate: PropTypes.func,\n  onHandleDelete: PropTypes.func\n}\n\nexport default DataSantri\n","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div\n      className='container-fluid p-4'\n    >\n      <div\n        className='bg-info border border-light rounded p-4'\n      >\n        <h1 className='display-4'>\n          Daftar Santri QODR Magelang\n        </h1>\n\n        <h5>\n          Tahun Ajaran 2020/2021\n        </h5>\n      </div>\n    </div>\n  )\n}\nexport default Header\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Collapse,\n  Nav,\n  NavItem,\n  Input,\n  Form,\n  FormGroup,\n  Label\n} from 'reactstrap'\n\nconst ActionButton = (props) => {\n  return (\n    <Button\n      color={props.colorButton}\n      outline={props.outlineButton}\n      className={props.className}\n      onClick={props.onClickButton}\n    >\n      {props.titleButton}\n    </Button>\n  )\n}\n\nconst ActionInput = (props) => {\n  return (\n    <Input\n      type={props.typeInput}\n      name={props.nameInput}\n      id={props.idInput}\n      className={props.className}\n      placeholder={props.placeholderInput}\n      value={props.valueInput}\n      onChange={(e) => props.onChangeInput(e)}\n    />\n  )\n}\n\nclass ActionModal extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isModalVisible: false\n    }\n  }\n\n  onToggleModal = () => {\n    this.setState({\n      isModalVisible: !this.state.isModalVisible\n    })\n  }\n\n  render () {\n    return (\n      <Modal\n        isOpen={this.state.isModalVisible}\n        toggle={() => this.onToggleModal()}\n      >\n        {this.renderModalHeader()}\n        {this.renderModalBody()}\n        {this.renderModalFooter()}\n      </Modal>\n    )\n  }\n\n  renderModalHeader = () => {\n    return (\n      <ModalHeader\n        className={this.props.className}\n      >\n        {this.props.titleHeader}\n      </ModalHeader>\n    )\n  }\n\n  renderModalBody = () => {\n    return (\n      <ModalBody className={this.props.classNameBody}>\n        <Form>\n          {this.props.inputDataModal.map((item, index) => {\n            return this.renderFormGroup(item, index)\n          })}\n        </Form>\n      </ModalBody>\n    )\n  }\n\n  renderFormGroup = (props, index) => {\n    return (\n      <FormGroup key={index}>\n        <Label for={props.label}>{props.nameLabel}</Label>\n        <ActionInput {...props} />\n      </FormGroup>\n    )\n  }\n\n  renderModalFooter = () => {\n    return (\n      <ModalFooter className={this.props.className}>\n        {this.props.inputActionButtonModal.map((item, index) => {\n          return (\n            <ActionButton\n              key={index}\n              titleButton={item.titleButton}\n              colorButton={item.colorButton}\n              className={item.className}\n              outlineButton={item.outlineButton}\n              onClickButton={() => {\n                item.onClickButton()\n                this.onToggleModal()\n              }}\n            />\n          )\n        })}\n      </ModalFooter>\n    )\n  }\n}\n\nconst ActionSearch = (props) => {\n  return (\n    <Collapse navbar>\n      <Nav className='ml-auto'>\n        <NavItem>\n          <ActionInput\n            typeInput='search'\n            className='form-control mr-sm-2'\n            placeholderInput='cari santri'\n            onChangeInput={(e) => props.onSearchSantri(e)}\n          />\n        </NavItem>\n      </Nav>\n    </Collapse>\n  )\n}\n\nActionButton.propTypes = {\n  titleButton: PropTypes.string,\n  colorButton: PropTypes.string,\n  className: PropTypes.string,\n  outlineButton: PropTypes.bool,\n  onClickButton: PropTypes.func\n}\n\nActionInput.propTypes = {\n  typeInput: PropTypes.string,\n  nameInput: PropTypes.string,\n  idInput: PropTypes.string,\n  className: PropTypes.string,\n  placeholderInput: PropTypes.string,\n  valueInput: PropTypes.string,\n  onChangeInput: PropTypes.func\n}\n\nActionModal.propTypes = {\n  inputDataModal: PropTypes.array,\n  inputActionButtonModal: PropTypes.array,\n  titleHeader: PropTypes.string,\n  className: PropTypes.string,\n  classNameBody: PropTypes.string,\n  postDataSantri: PropTypes.object,\n  onHandleInput: PropTypes.func\n}\n\nActionSearch.propTypes = {\n  onSearchSantri: PropTypes.func\n}\n\nexport { ActionButton, ActionModal, ActionSearch }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Navbar } from 'reactstrap'\nimport { ActionButton, ActionModal, ActionSearch } from '../action'\n\nclass MenuBar extends Component {\n  render () {\n    const inputDataModal = [\n      {\n        label: 'name',\n        nameLabel: 'Nama Santri',\n        typeInput: 'text',\n        nameInput: 'name',\n        idInput: 'name',\n        placeholderInput: 'nama santri',\n        valueInput: this.props.postDataSantri.name,\n        onChangeInput: this.props.onHandleInput\n      },\n      {\n        label: 'studyProgram',\n        nameLabel: 'Jurusan Santri',\n        typeInput: 'text',\n        nameInput: 'studyProgram',\n        idInput: 'studyProgram',\n        placeholderInput: 'jurusan santri',\n        valueInput: this.props.postDataSantri.studyProgram,\n        onChangeInput: this.props.onHandleInput\n      }\n    ]\n\n    const inputActionButtonModal = [\n      {\n        titleButton: 'Simpan',\n        colorButton: 'info',\n        className: 'px-5',\n        outlineButton: false,\n        onClickButton: this.props.onHandlePost\n      },\n      {\n        titleButton: 'Batal',\n        colorButton: 'secondary',\n        className: 'px-5',\n        outlineButton: true,\n        onClickButton: () => {}\n      }\n    ]\n\n    return (\n      <div className='container-fluid p-4'>\n        <Navbar\n          color='light'\n          light\n          expand='md'\n          className='rounded'\n        >\n          <ActionButton\n            titleButton='Tambah Santri'\n            colorButton='info'\n            onClickButton={() => this.actionModal.onToggleModal()}\n          />\n\n          <ActionModal\n            ref={ref => { this.actionModal = ref }}\n            inputDataModal={inputDataModal}\n            inputActionButtonModal={inputActionButtonModal}\n            titleHeader='Tambah Data Santri'\n            postDataSantri={this.props.postDataSantri}\n            onHandleInput={this.props.onHandleInput}\n            onHandlePost={this.props.onHandlePost}\n          />\n\n          <ActionSearch\n            onSearchSantri={this.props.onSearchSantri}\n          />\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nMenuBar.propTypes = {\n  postDataSantri: PropTypes.object,\n  onHandleInput: PropTypes.func,\n  onHandlePost: PropTypes.func,\n  onSearchSantri: PropTypes.func\n}\n\nexport default MenuBar\n","import React from 'react'\n\nconst PageNotFound = () => {\n  return (\n    <h1 className='text-center'>\n      Maaf, Data Tidak Ditemukan\n    </h1>\n  )\n}\n\nexport default PageNotFound\n","import React from 'react'\nimport DataSantri from './dataSantri'\nimport PageNotFound from './page404'\nimport PropTypes from 'prop-types'\n\nconst Contents = (props) => {\n  return (\n    <div className='container-fluid p-4'>\n      {\n        props.dataSantri\n          ? <DataSantri {...props} />\n          : <PageNotFound />\n      }\n    </div>\n  )\n}\n\nContents.propTypes = {\n  dataSantri: PropTypes.array\n}\n\nexport default Contents\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Pagination,\n  PaginationItem,\n  PaginationLink\n} from 'reactstrap'\n\nclass PaginationButton extends Component {\n  render () {\n    const previousBtn = {\n      disabled: this.isDisabledPrevious(),\n      onClick: this.props.onPreviousPage,\n      titleBtn: 'Previous'\n    }\n\n    const nextBtn = {\n      disabled: this.isDisabledNext(),\n      onClick: this.props.onNextPage,\n      titleBtn: 'Next'\n    }\n\n    return (\n      <div className='container-fluid d-flex justify-content-between'>\n        <p>\n          &copy; Copyright template By &nbsp;\n          <span>\n            <a\n              className='text-white'\n              href='https://github.com/Diko99'\n            >\n              Diko Mahendra\n            </a>\n          </span>\n        </p>\n        <Pagination\n          className='pagination justify-space-between m-4'\n          aria-label='Page navigation example'\n        >\n          {this.renderActionButton(previousBtn)}\n\n          {this.renderPaginationButton()}\n\n          {this.renderActionButton(nextBtn)}\n        </Pagination>\n      </div>\n    )\n  }\n\n  renderActionButton = (props = { active: false, id: 'id kosong' }) => {\n    return (\n      <PaginationItem\n        key={props.key}\n        disabled={props.disabled}\n        active={props.active}\n      >\n        <PaginationLink\n          id={props.id}\n          onClick={props.onClick}\n        >\n          {props.titleBtn}\n        </PaginationLink>\n      </PaginationItem>\n    )\n  }\n\n  renderPaginationButton = () => {\n    return (\n      this.props.paginationNumbers.map((item, index) => {\n        const paginationNumberBtn = {\n          key: index,\n          active: this.props.currentPage === item,\n          id: item,\n          titleBtn: item,\n          onClick: this.props.onMovePage\n        }\n\n        return this.renderActionButton(paginationNumberBtn)\n      })\n    )\n  }\n\n  isDisabledPrevious = () => {\n    return this.props.currentPage <= 1\n  }\n\n  isDisabledNext = () => {\n    return this.props.currentPage === this.props.paginationNumbers.length\n  }\n}\n\nPaginationButton.propTypes = {\n  currentPage: PropTypes.number,\n  paginationNumbers: PropTypes.array,\n  onMovePage: PropTypes.func,\n  onPreviousPage: PropTypes.func,\n  onNextPage: PropTypes.func\n}\n\nexport default PaginationButton\n","import React, { Component } from 'react'\nimport Header from './components/header'\nimport MenuBar from './components/navbar'\nimport Contents from './components/contents'\nimport PaginationButton from './components/pagination'\nimport axios from 'axios'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      dataSantri: [],\n      newDataSantri: [],\n      value: '',\n      postDataSantri: {\n        id: '',\n        name: '',\n        studyProgram: ''\n      },\n      isUpdate: false,\n      currentPage: 1,\n      dataSantriPerPage: 5,\n      dataSantriWithLimit: [],\n      paginationNumbers: []\n    }\n  }\n\n  componentDidMount () {\n    this.onGetDataSantri()\n  }\n\n  onGetDataSantri = () => {\n    axios.get('http://localhost:4000/posts?_sort=id&_order=desc')\n      .then((result) => {\n        this.setState({\n          dataSantri: result.data\n        }, () => {\n          this.setPagination()\n        })\n      })\n  }\n\n  onHandleInput = (event) => {\n    const NewPostDataSantri = { ...this.state.postDataSantri }\n    NewPostDataSantri[event.target.name] = event.target.value\n    const timeid = new Date().getTime()\n    if (!this.state.isUpdate) {\n      NewPostDataSantri.id = timeid\n    }\n    this.setState({\n      id: '',\n      postDataSantri: NewPostDataSantri\n    })\n  }\n\n  onHandlePost = () => {\n    axios.post('http://localhost:4000/posts', this.state.postDataSantri)\n      .then(() => {\n        this.onGetDataSantri()\n        this.setState({\n          postDataSantri: {\n            id: '',\n            name: '',\n            studyProgram: ''\n          }\n        })\n      })\n  }\n\n  onHandleUpdate = () => {\n    axios.put(`http://localhost:4000/posts/${this.state.postDataSantri.id}`, this.state.postDataSantri)\n      .then(() => {\n        this.onGetDataSantri()\n        this.setState({\n          postDataSantri: {\n            id: '',\n            name: '',\n            studyProgram: ''\n          }\n        })\n      })\n  }\n\n  onDataUpdate = (data) => {\n    this.setState({\n      postDataSantri: data,\n      isUpdate: true\n    })\n  }\n\n  onHandleDelete = (id) => {\n    axios.delete(`http://localhost:4000/posts/${id}`)\n      .then(() => {\n        this.onGetDataSantri()\n      })\n  }\n\n  onSearchSantri = (e) => {\n    this.setState({\n      value: e.target.value\n    }, () => {\n      if (this.state.dataSantri) {\n        const searchDataSantri = this.state.dataSantri.filter(\n          (item) => {\n            return (\n              item.name.toLowerCase().indexOf(this.state.value.toLowerCase()) > -1\n            )\n          }\n        )\n        this.setState({\n          newDataSantri: searchDataSantri\n        }, () => this.setPagination())\n      }\n    })\n  }\n\n  setPagination = () => {\n    const { dataSantri, currentPage, dataSantriPerPage, value, newDataSantri } = this.state // destructuring assigments\n    const lastIndexOfSantri = currentPage * dataSantriPerPage // menentukan nilai lastindex\n    const firstIndexOfSantri = lastIndexOfSantri - dataSantriPerPage // menentukan nilai firstindex\n\n    // menghitung jumlah seluruh data perPagenya\n    const dataSantriWithLimit = value && newDataSantri.length // pengkondisian ternary\n      ? newDataSantri.slice(firstIndexOfSantri, lastIndexOfSantri)\n      : value && !newDataSantri.length\n        ? null\n        : dataSantri.slice(firstIndexOfSantri, lastIndexOfSantri)\n\n    const paginationNumbers = [] // variabel penampung jumlah pagination yg dibutuhkan\n\n    // MENGHITUNG seluruh datasantri yang ada.length\n    const currentDataSantriLength = value && newDataSantri.length // pengkondisian ternary\n      ? newDataSantri.length\n      : value && !newDataSantri.length\n        ? null\n        : dataSantri.length\n\n    // melooping hasil dari seluruh datasantri dibagi datasantriperpage(5) kemudian dibulatkan\n    for (let i = 1; i <= Math.ceil(currentDataSantriLength / dataSantriPerPage); i++) {\n      // hasil looping dipush / disimpan kedalam variabel paginationNumbers yg digunakan untuk menghitung jumlah paginationya\n      paginationNumbers.push(i)\n    }\n\n    this.setState({\n      dataSantriWithLimit, // merubah this.state.dataSantriWithLimit menjadi (variabel) dataSantriWithLimit\n      paginationNumbers // merubah this.state.paginationNumbers menjadi (variabel) paginationNumbers\n    })\n  }\n\n  onMovePage = (event) => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    }, () => this.setPagination())\n  }\n\n  onPreviousPage = () => {\n    this.setState(prevState => ({\n      currentPage: prevState.currentPage > 1\n        ? prevState.currentPage - 1\n        : prevState.currentPage\n    }), () => this.setPagination())\n  }\n\n  onNextPage = () => {\n    this.setState(prevState => ({\n      currentPage: prevState.currentPage < this.state.paginationNumbers.length\n        ? prevState.currentPage + 1\n        : prevState.currentPage\n    }), () => this.setPagination())\n  }\n\n  render () {\n    const {\n      onHandleInput,\n      onHandlePost,\n      onHandleUpdate,\n      onHandleDelete,\n      onSearchSantri,\n      onDataUpdate,\n      onMovePage,\n      onPreviousPage,\n      onNextPage\n    } = this\n\n    const {\n      postDataSantri,\n      value,\n      paginationNumbers,\n      dataSantriWithLimit,\n      currentPage\n    } = this.state\n\n    return (\n      <div\n        className='bg-info text-light'\n        style={{ minHeight: '100vh' }}\n      >\n        <Header />\n\n        <MenuBar\n          postDataSantri={postDataSantri}\n          value={value}\n          onHandleInput={onHandleInput}\n          onHandlePost={onHandlePost}\n          onSearchSantri={onSearchSantri}\n        />\n\n        <Contents\n          value={value}\n          dataSantri={dataSantriWithLimit}\n          newDataSantri={dataSantriWithLimit}\n          postDataSantri={postDataSantri}\n          onDataUpdate={onDataUpdate}\n          onHandleInput={onHandleInput}\n          onHandleUpdate={onHandleUpdate}\n          onHandleDelete={onHandleDelete}\n        />\n        <PaginationButton\n          currentPage={currentPage}\n          paginationNumbers={paginationNumbers}\n          onMovePage={onMovePage}\n          onPreviousPage={onPreviousPage}\n          onNextPage={onNextPage}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}